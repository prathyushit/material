{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\swamy\\\\Downloads\\\\material-dashboard-react-main\\\\material-dashboard-react-main\\\\src\\\\layouts\\\\datatool\\\\components\\\\DataList\\\\index.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport MDBox from \"../../../components/MDBox\";\nimport MDTypography from \"../../../components/MDTypography\";\nimport { Card, CircularProgress } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DataInfoList = ({\n  dataInfo,\n  loading\n}) => {\n  _s();\n  const [contentAlignment, setContentAlignment] = useState(\"center\");\n  console.log(\"datainfo\", dataInfo);\n  console.log(\"datainfo type\", typeof dataInfo);\n  useEffect(() => {\n    if (loading || typeof dataInfo === \"string\" || !dataInfo) {\n      setContentAlignment(\"center\");\n    } else if (typeof dataInfo === \"object\" && dataInfo !== null && !Array.isArray(dataInfo)) {\n      setContentAlignment(\"start\");\n    }\n  }, [dataInfo, loading]);\n  const renderContent = () => {\n    if (loading) {\n      return /*#__PURE__*/_jsxDEV(CircularProgress, {\n        color: \"info\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 14\n      }, this);\n    } else if (dataInfo) {\n      if (typeof dataInfo === \"object\" && dataInfo !== null && !Array.isArray(dataInfo)) {\n        return Object.entries(dataInfo).map(([label, value], key) => /*#__PURE__*/_jsxDEV(MDBox, {\n          display: \"flex\",\n          py: 1,\n          pr: 2,\n          children: [/*#__PURE__*/_jsxDEV(MDTypography, {\n            variant: \"button\",\n            fontWeight: \"bold\",\n            textTransform: \"capitalize\",\n            children: [label, \": \\xA0\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 14\n          }, this), /*#__PURE__*/_jsxDEV(MDTypography, {\n            variant: \"button\",\n            fontWeight: \"regular\",\n            color: \"text\",\n            children: [\"\\xA0\", value]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 11\n          }, this)]\n        }, key, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this));\n      } else if (typeof dataInfo === \"string\") {\n        return /*#__PURE__*/_jsxDEV(MDTypography, {\n          variant: \"button\",\n          fontWeight: \"regular\",\n          color: \"text\",\n          children: dataInfo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this);\n      }\n    }\n    return /*#__PURE__*/_jsxDEV(MDTypography, {\n      variant: \"button\",\n      fontWeight: \"regular\",\n      color: \"text\",\n      children: \"No status\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(MDBox, {\n    sx: {\n      gap: 1,\n      display: \"flex\",\n      marginTop: 3,\n      flexDirection: \"column\"\n    },\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      sx: {\n        padding: 2,\n        minHeight: 250,\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: contentAlignment,\n        justifyContent: \"center\"\n      },\n      children: renderContent()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n_s(DataInfoList, \"648u1seRr1Z5nHSS5d3Qt9mT09M=\");\n_c = DataInfoList;\nexport default DataInfoList;\nvar _c;\n$RefreshReg$(_c, \"DataInfoList\");","map":{"version":3,"names":["React","useState","useEffect","MDBox","MDTypography","Card","CircularProgress","jsxDEV","_jsxDEV","DataInfoList","dataInfo","loading","_s","contentAlignment","setContentAlignment","console","log","Array","isArray","renderContent","color","fileName","_jsxFileName","lineNumber","columnNumber","Object","entries","map","label","value","key","display","py","pr","children","variant","fontWeight","textTransform","sx","gap","marginTop","flexDirection","padding","minHeight","alignItems","justifyContent","_c","$RefreshReg$"],"sources":["C:/Users/swamy/Downloads/material-dashboard-react-main/material-dashboard-react-main/src/layouts/datatool/components/DataList/index.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport MDBox from \"../../../components/MDBox\";\r\nimport MDTypography from \"../../../components/MDTypography\";\r\nimport { Card, CircularProgress } from \"@mui/material\";\r\n\r\nconst DataInfoList = ({ dataInfo, loading }) => {\r\n  const [contentAlignment, setContentAlignment] = useState(\"center\");\r\n  console.log(\"datainfo\",dataInfo);\r\n  console.log(\"datainfo type\",typeof dataInfo);\r\n  useEffect(() => {\r\n    if (loading || typeof dataInfo === \"string\" || !dataInfo) {\r\n      setContentAlignment(\"center\");\r\n    } else if (\r\n      typeof dataInfo === \"object\" &&\r\n      dataInfo !== null &&\r\n      !Array.isArray(dataInfo)\r\n    ) {\r\n      setContentAlignment(\"start\");\r\n    }\r\n  }, [dataInfo, loading]);\r\n\r\n  const renderContent = () => {\r\n    if (loading) {\r\n      return <CircularProgress color=\"info\" />;\r\n    } else if (dataInfo) {\r\n      if (\r\n        typeof dataInfo === \"object\" &&\r\n        dataInfo !== null &&\r\n        !Array.isArray(dataInfo)\r\n      ) {\r\n        return Object.entries(dataInfo).map(([label, value], key) => (\r\n          <MDBox key={key} display=\"flex\" py={1} pr={2}>\r\n             <MDTypography\r\n              variant=\"button\"\r\n              fontWeight=\"bold\"\r\n              textTransform=\"capitalize\"\r\n            >\r\n              {label}: &nbsp;\r\n            </MDTypography>\r\n          <MDTypography variant=\"button\" fontWeight=\"regular\" color=\"text\">\r\n              &nbsp;{value}\r\n            </MDTypography> \r\n          </MDBox>\r\n        ));\r\n      } else if (typeof dataInfo === \"string\") {\r\n        return (\r\n          <MDTypography variant=\"button\" fontWeight=\"regular\" color=\"text\">\r\n            {dataInfo}\r\n          </MDTypography>\r\n        );\r\n      }\r\n    }\r\n\r\n    return (\r\n      <MDTypography variant=\"button\" fontWeight=\"regular\" color=\"text\">\r\n        No status\r\n      </MDTypography>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <MDBox\r\n      sx={{ gap: 1, display: \"flex\", marginTop: 3, flexDirection: \"column\" }}\r\n    >\r\n      <Card\r\n        sx={{\r\n          padding: 2,\r\n          minHeight: 250,\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          alignItems: contentAlignment,\r\n          justifyContent: \"center\",\r\n        }}\r\n      >\r\n        {renderContent()}\r\n      </Card>\r\n    </MDBox>\r\n  );\r\n};\r\n\r\nexport default DataInfoList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}