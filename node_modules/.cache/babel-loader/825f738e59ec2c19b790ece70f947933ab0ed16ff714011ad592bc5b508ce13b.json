{"ast":null,"code":"//prettier-ignore-start\n\nimport * as cognito from \"../config/cognito\";\nvar AmazonCognitoIdentity = require(\"amazon-cognito-identity-js\");\nexport const loginUser = async credentials => {\n  return new Promise((resolve, reject) => {\n    const authData = {\n      Username: credentials.email,\n      Password: credentials.password\n    };\n    const authDetails = new AmazonCognitoIdentity.AuthenticationDetails(authData);\n    const userPool = new AmazonCognitoIdentity.CognitoUserPool(cognito.poolData);\n    const userData = {\n      Username: credentials.email,\n      Pool: userPool\n    };\n    const userAuth = new AmazonCognitoIdentity.CognitoUser(userData);\n    userAuth.authenticateUser(authDetails, {\n      onSuccess: async session => {\n        resolve(session);\n      },\n      onFailure: error => {\n        reject(error);\n      },\n      newPasswordRequired: (userAttributes, requiredAttributes) => {\n        delete userAttributes.email_verified;\n        delete userAttributes.email;\n        userAuth.completeNewPasswordChallenge(credentials.password, userAttributes, {\n          onSuccess: session => {\n            resolve(session);\n          },\n          onFailure: error => {\n            reject(error);\n          }\n        });\n      }\n    });\n  });\n};\nexport const forgotPasswordUser = async email => {\n  return new Promise((resolve, reject) => {\n    const userPool = new AmazonCognitoIdentity.CognitoUserPool(cognito.poolData);\n    const userData = {\n      Username: email,\n      Pool: userPool\n    };\n    const cognitoUser = new AmazonCognitoIdentity.CognitoUser(userData);\n    cognitoUser.forgotPassword({\n      onSuccess: data => {\n        resolve(data);\n      },\n      onFailure: err => {\n        reject(err);\n      },\n      inputVerificationCode: data => {\n        resolve(data);\n      }\n    });\n  });\n};\nexport const resetPasswordUser = async (credentials, email) => {\n  return new Promise((resolve, reject) => {\n    const userPool = new AmazonCognitoIdentity.CognitoUserPool(cognito.poolData);\n    const userData = {\n      Username: email,\n      Pool: userPool\n    };\n    var cognitoUser = new AmazonCognitoIdentity.CognitoUser(userData);\n    cognitoUser.confirmPassword(credentials.code, credentials.password, {\n      onSuccess: data => {\n        resolve(data);\n      },\n      onFailure: err => {\n        reject(err);\n      }\n    });\n  });\n};\nexport const refreshTokenUser = async () => {\n  return new Promise((resolve, reject) => {\n    const userPool = new AmazonCognitoIdentity.CognitoUserPool(cognito.poolData);\n    const cognitoUser = userPool.getCurrentUser();\n    if (!cognitoUser) {\n      return reject(new Error(\"User not found\"));\n    }\n    cognitoUser.getSession((error, session) => {\n      if (error) {\n        return reject(new Error(error));\n      }\n      if (!session.isValid()) {\n        return reject(new Error(\"Session not valid\"));\n      }\n      resolve(session);\n    });\n  });\n};\nexport const logoutUser = async () => {\n  try {\n    const userPool = new AmazonCognitoIdentity.CognitoUserPool(cognito.poolData);\n    const cognitoUser = userPool.getCurrentUser();\n    if (cognitoUser) {\n      cognitoUser.signOut();\n      return {\n        success: true\n      };\n    }\n    return {\n      success: false,\n      message: \"No user to sign out\"\n    };\n  } catch (error) {\n    throw error;\n  }\n};\n// prettier-ignore-end","map":{"version":3,"names":["cognito","AmazonCognitoIdentity","require","loginUser","credentials","Promise","resolve","reject","authData","Username","email","Password","password","authDetails","AuthenticationDetails","userPool","CognitoUserPool","poolData","userData","Pool","userAuth","CognitoUser","authenticateUser","onSuccess","session","onFailure","error","newPasswordRequired","userAttributes","requiredAttributes","email_verified","completeNewPasswordChallenge","forgotPasswordUser","cognitoUser","forgotPassword","data","err","inputVerificationCode","resetPasswordUser","confirmPassword","code","refreshTokenUser","getCurrentUser","Error","getSession","isValid","logoutUser","signOut","success","message"],"sources":["C:/Users/swamy/Downloads/material-dashboard-react-main/material-dashboard-react-main/src/service/authService.js"],"sourcesContent":["//prettier-ignore-start\n\nimport * as cognito from \"../config/cognito\";\nvar AmazonCognitoIdentity = require(\"amazon-cognito-identity-js\");\n\nexport const loginUser = async (credentials) => {\n  return new Promise((resolve, reject) => {\n    const authData = {\n      Username: credentials.email,\n      Password: credentials.password,\n    };\n\n    const authDetails = new AmazonCognitoIdentity.AuthenticationDetails(\n      authData\n    );\n\n    const userPool = new AmazonCognitoIdentity.CognitoUserPool(\n      cognito.poolData\n    );\n\n    const userData = {\n      Username: credentials.email,\n      Pool: userPool,\n    };\n\n    const userAuth = new AmazonCognitoIdentity.CognitoUser(userData);\n\n    userAuth.authenticateUser(authDetails, {\n      onSuccess: async (session) => {\n        resolve(session);\n      },\n      onFailure: (error) => {\n        reject(error);\n      },\n      newPasswordRequired: (userAttributes, requiredAttributes) => {\n        delete userAttributes.email_verified;\n        delete userAttributes.email;\n\n        userAuth.completeNewPasswordChallenge(\n          credentials.password,\n          userAttributes,\n          {\n            onSuccess: (session) => {\n              resolve(session);\n            },\n            onFailure: (error) => {\n              reject(error);\n            },\n          }\n        );\n      },\n    });\n  });\n};\n\nexport const forgotPasswordUser = async (email) => {\n  return new Promise((resolve, reject) => {\n    const userPool = new AmazonCognitoIdentity.CognitoUserPool(\n      cognito.poolData\n    );\n\n    const userData = {\n      Username: email,\n      Pool: userPool,\n    };\n\n    const cognitoUser = new AmazonCognitoIdentity.CognitoUser(userData);\n\n    cognitoUser.forgotPassword({\n      onSuccess: (data) => {\n        resolve(data);\n      },\n      onFailure: (err) => {\n        reject(err);\n      },\n      inputVerificationCode: (data) => {\n        resolve(data);\n      },\n    });\n  });\n};\n\nexport const resetPasswordUser = async (credentials, email) => {\n  return new Promise((resolve, reject) => {\n    const userPool = new AmazonCognitoIdentity.CognitoUserPool(\n      cognito.poolData\n    );\n\n    const userData = {\n      Username: email,\n      Pool: userPool,\n    };\n\n    var cognitoUser = new AmazonCognitoIdentity.CognitoUser(userData);\n\n    cognitoUser.confirmPassword(credentials.code, credentials.password, {\n      onSuccess: (data) => {\n        resolve(data);\n      },\n      onFailure: (err) => {\n        reject(err);\n      },\n    });\n  });\n};\n\nexport const refreshTokenUser = async () => {\n  return new Promise((resolve, reject) => {\n    const userPool = new AmazonCognitoIdentity.CognitoUserPool(\n      cognito.poolData\n    );\n    const cognitoUser = userPool.getCurrentUser();\n\n    if (!cognitoUser) {\n      return reject(new Error(\"User not found\"));\n    }\n\n    cognitoUser.getSession((error, session) => {\n      if (error) {\n        return reject(new Error(error));\n      }\n\n      if (!session.isValid()) {\n        return reject(new Error(\"Session not valid\"));\n      }\n\n      resolve(session);\n    });\n  });\n};\n\nexport const logoutUser = async () => {\n  try {\n    const userPool = new AmazonCognitoIdentity.CognitoUserPool(\n      cognito.poolData\n    );\n    const cognitoUser = userPool.getCurrentUser();\n\n    if (cognitoUser) {\n      cognitoUser.signOut();\n      return { success: true };\n    }\n    return { success: false, message: \"No user to sign out\" };\n  } catch (error) {\n    throw error;\n  }\n};\n// prettier-ignore-end\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}